$#include "module/graphics/Texture2D.h"
$using namespace media;


namespace media {

    typedef int         int32_t;
    typedef unsigned int uint32_t;
    typedef unsigned int size_t;
    typedef int32_t  GLint;
    typedef uint32_t GLenum;

class Texture2D : public Texture
{
public:
    static Texture2D *create();
    Texture2D();
public:
    virtual ~Texture2D();

    // load by textureID, that will not release texture
    virtual bool load(int textureID, GLenum format, int w, int h);
    //
    virtual bool load(const unsigned char* fileData, size_t dataLen);
    virtual bool load(const Image *image, const NS_MEDIA::Size &out = NS_MEDIA::Size::ZERO);
    virtual bool load(FileHandle *file);
    
    bool reload();

    bool isLoaded() const;

    void bind() const;

    virtual int getWidth() const;
    virtual int getHeight() const;
    
    void setWidthAndHeight(int pWidth, int pHeight);

    GLuint getTextureID() const;

    static void initMaxTextureSize();
    static GLint getMaxTextureSize();

    virtual GLuint getTexName() const;
    
    void setFileHandle(FileHandle* file);
    FileHandle* getFileHandle();

    void setFileName(const std::string &name);
    const std::string& getFileName() const;
};

} // end media


$#include "core/Coordinate.h"
$using namespace media;

namespace media {

class Coordinate {

public:
  double X; ///< The X value of the coordinate (usually representing the frame #)
  double Y; ///< The Y value of the coordinate (usually representing the value of the property being animated)

  /// The default constructor, which defaults to (0,0)
  Coordinate();

  /// @brief Constructor which also sets the X and Y
  /// @param x The X coordinate (usually representing the frame #)
  /// @param y The Y coordinate (usually representing the value of the property being animated)
  Coordinate(double x, double y);

  /// @brief Set the repeating Fraction (used internally on the timeline, to track changes to coordinates)
  /// @param is_repeated The fraction representing how many times this coordinate Y value repeats (only used on the timeline)
  void Repeat(Fraction is_repeated) { repeated=is_repeated; }

  /// Get the repeating Fraction (used internally on the timeline, to track changes to coordinates)
  Fraction Repeat() { return repeated; }

  /// @brief Set the increasing flag (used internally on the timeline, to track changes to coordinates)
  /// @param is_increasing Indicates if this coordinate Y value is increasing (when compared to the previous coordinate)
  void IsIncreasing(bool is_increasing) { increasing = is_increasing; }

  /// Get the increasing flag (used internally on the timeline, to track changes to coordinates)
  bool IsIncreasing() { return increasing; }

  /// @brief Set the delta / difference between previous coordinate value (used internally on the timeline, to track changes to coordinates)
  /// @param new_delta Indicates how much this Y value differs from the previous Y value
  void Delta(double new_delta) { delta=new_delta; }

  /// Get the delta / difference between previous coordinate value (used internally on the timeline, to track changes to coordinates)
  float Delta() { return delta; }

  /// Get and Set JSON methods
  string Json(); ///< Generate JSON string of this object
  Json::Value JsonValue(); ///< Generate Json::JsonValue for this object
  void SetJson(string value); ///< Load JSON string into this object
  void SetJsonValue(Json::Value root); ///< Load Json::JsonValue into this object
};

} // end media
